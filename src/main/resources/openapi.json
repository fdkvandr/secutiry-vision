{
  "openapi": "3.0.3",
  "info": {
    "title": "Security Vision - OpenAPI 3.0",
    "description": "В данном разделе приведено описание методов API.\n\nВсе методы API работают по стандарту REST. Формат запросов и ответов: JSON.\n\nМетоды API функционируют на Сервисе API (webapi): приложении для функционирования методов API, которое обрабатывает запросы, приходящие от веб-приложения или от внешних систем. Для приема запросов к методам API из внешних систем используется отдельный компонент API. Данный компонент принимает запросы к методам API от внешних систем, обогащает их и перенаправляет в Сервис API (webapi).",
    "contact": {
      "email": "aleksandr.tolmachev@glowbyteconsulting.com"
    },
    "version": "1.0.1"
  },
  "externalDocs": {
    "description": "Руководство администратора по API",
    "url": "https://158.160.23.243:8080/assets/docs/html/app_admin_guide/index.html?api.html"
  },
  "servers": [
    {
      "url": "http://localhost:10000"
    }
  ],
  "tags": [
    {
      "name": "Объект",
      "description": "Действия с объектами",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "Справочник",
      "description": "Действия со справочниками",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "Рабочий процесс",
      "description": "Действия с рабочими процессами",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    }
  ],
  "paths": {
    "/api/entity/create": {
      "post": {
        "tags": [
          "Объект"
        ],
        "summary": "Создание объекта",
        "description": "Метод создает объект определенного типа с заполненными свойствами. В запросе можно указать свойства и соответствующие значения, с которыми будет создан объект. В ответе на запрос возвращается ID созданного объекта. При создании объекта к нему применяются правила Автозаполнения, Валидации, Видимости и доступности, Правил группировки, настроенные для соответствующего типа объекта.",
        "operationId": "entity_create",
        "requestBody": {
          "description": "Структура запроса",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/entity_create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Если успешно создан новый объект, то в ответе возвращается идентификатор созданного объекта",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity_create_success"
                }
              }
            }
          },
          "400": {
            "description": "Если не заполнены обязательные входные параметры, то возвращается результат с ошибкой и с перечислением входных параметров, которые необходимо заполнить:",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity_create_error"
                }
              }
            }
          },
          "409": {
            "description": "Если сработало правило группировки (см. пояснение в разделе Правила группировки), то возвращается соответствующий результат:",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity_create_duplicate"
                }
              }
            }
          }
        }
      }
    },
    "/api/entity/search": {
      "post": {
        "tags": [
          "Объект"
        ],
        "summary": "Поиск объектов по фильтру",
        "description": "Метод выполняет поиск объектов, существующих на Платформе, по определенному фильтру. В ответе на запрос возвращаются данные по найденным объектам.",
        "operationId": "entity_search",
        "requestBody": {
          "description": "Структура запроса",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/entity_search"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Структура ответа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity_search_success"
                }
              }
            }
          }
        }
      }
    },
    "/api/entity": {
      "get": {
        "tags": [
          "Объект"
        ],
        "summary": "Получение объекта по его идентификатору",
        "description": "Метод выполняет поиск объекта по его идентификатору и принимает все значения всех его свойств. В запросе передается идентификатор объекта, который указывается в параметре id. В ответе на запрос возвращаются данные найденного объекта.",
        "operationId": "entity_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "идентификатор искомого объекта",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Структура ответа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity_search_id_success"
                }
              }
            }
          }
        }
      }
    },
    "/api/entity/workflows/{id}": {
      "get": {
        "tags": [
          "Рабочий процесс"
        ],
        "summary": "Получение рабочих процессов объекта",
        "description": "Метод выполняет поиск экземпляров рабочих процессов объекта по его идентификатору. В запросе передается идентификатор объекта, который указывается в параметре id. В ответе возвращаются данные по каждому найденному экземпляру рабочего процесса, по которому проходит объект.",
        "operationId": "workflows_by_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "параметр для ввода идентификатора объекта, рабочие процессы которого необходимо получить.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Структура ответа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflows_id_success"
                }
              }
            }
          }
        }
      }
    },
    "/api/entity/update": {
      "post": {
        "tags": [
          "Объект"
        ],
        "summary": "Внесение изменений в объект по идентификатору",
        "description": "Метод вносит изменения в объект, определяемый по его идентификатору. В ответе на запрос возвращается статус внесения изменений.",
        "operationId": "entity_update",
        "requestBody": {
          "description": "Структура запроса",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/entity_update"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Структура ответа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity_update_success"
                }
              }
            }
          },
          "400": {
            "description": "В запросе указан массив идентификаторов объектов. Пример ответа:",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/entity_update_error"
                }
              }
            }
          }
        }
      }
    },
    "/api/reference/create": {
      "post": {
        "tags": [
          "Справочник"
        ],
        "summary": "Создание строки справочника",
        "description": "Метод создает строку в справочнике с заполненными свойствами. В запросе можно указать свойства и соответствующие значения, с которыми будет создана строка. В ответе на запрос возвращается ID созданной строки. При создании строки к ней применяются правила Автозаполнения, Валидации и Правил группировки, настроенные для соответствующего справочника.",
        "operationId": "reference_create",
        "requestBody": {
          "description": "Структура запроса",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reference_create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Структура ответа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reference_create_success"
                }
              }
            }
          }
        }
      }
    },
    "/api/reference/search": {
      "post": {
        "tags": [
          "Справочник"
        ],
        "summary": "Поиск строк справочника по фильтру",
        "description": "Метод выполняет поиск строк справочника по фильтру. В ответе на запрос возвращаются данные по найденным строкам справочника.",
        "operationId": "reference_search",
        "requestBody": {
          "description": "Структура запроса",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reference_search"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Структура ответа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reference_search_success"
                }
              }
            }
          }
        }
      }
    },
    "/api/reference/row": {
      "post": {
        "tags": [
          "Справочник"
        ],
        "summary": "Получение строки справочника по ее идентификатору",
        "description": "Метод выполняет поиск строки справочника по ее идентификатору и принимает все значения всех ее свойств. В запросе передается идентификатор строки, который указывается в запросе. В ответе на запрос возвращаются данные найденной строки справочника.",
        "operationId": "reference_row",
        "requestBody": {
          "description": "Структура запроса",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reference_row"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Структура ответа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reference_row_success"
                }
              }
            }
          }
        }
      }
    },
    "/api/reference/update": {
      "post": {
        "tags": [
          "Справочник"
        ],
        "summary": "Внесение изменений в строку справочника",
        "description": "Метод вносит изменения в строку справочника. В ответе на запрос возвращается статус внесения изменений.",
        "operationId": "reference_update",
        "requestBody": {
          "description": "Структура запроса",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reference_update"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Структура ответа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reference_update_success"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/start": {
      "post": {
        "tags": [
          "Рабочий процесс"
        ],
        "summary": "Запуск рабочих процессов",
        "description": "Метод запускает экземпляры рабочих процессов без привязки к объектам.",
        "operationId": "workflow_start",
        "requestBody": {
          "description": "Структура запроса",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/workflow_start"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Структура ответа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflow_start_success"
                }
              }
            }
          },
          "400": {
            "description": "Структура ответа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflow_start_error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "entity_create": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Указывается тип объекта, который будет создан",
            "example": {
              "name": "Название типа объекта",
              "path": [
                "Группа типов объектов 1",
                "Подгруппа типов объектов 1"
              ],
              "id": 1
            }
          },
          "properties": {
            "type": "string",
            "description": "Указываются свойства и значения для заполнения создаваемого объекта. Важно! Встроенные свойства объекта Id, Создатель, Создан (дата создания объекта), Тип — заполняются автоматически при создании объекта на Платформе. При попытке заполнения данных свойств (вводе в данном разделе properties) запрос не выполнится, вернется ошибка.",
            "example": [
              {
                "name": "Название типа объекта",
                "path": [
                  "Группа свойств 1",
                  "Подгруппа свойств 1"
                ],
                "id": 1,
                "value": "Текстовое значение",
                "filter": "{...}"
              },
              "..."
            ]
          },
          "workflows": {
            "type": "string",
            "description": "Указываются шаблоны рабочих процессов, по экземплярам которых необходимо запустить новый объект после его создания",
            "example": [
              {
                "id": 2,
                "name": "Обработка инцидента",
                "path": [
                  "Группа шаблона рабочих процессов",
                  "Подгруппа шаблона рабочих процессов"
                ]
              },
              {
                "id": 3,
                "name": "Обработка инцидента",
                "path": [
                  "Группа шаблона рабочих процессов",
                  "Подгруппа шаблона рабочих процессов"
                ]
              },
              "..."
            ]
          },
          "inputs": {
            "type": "string",
            "description": "Значения для входных параметров рабочих процессов. Если название и тип данных одного из входных параметров из разных шаблонов рабочих процессов совпадают, то такой входной параметр будет перезаписан одним и тем же указанным значением для всех экземпляров рабочих процессов, сформированных из разных шаблонов.",
            "example": [
              {
                "name": "Название входного параметра №1",
                "value": "Значение входного параметра №1"
              }
            ]
          }
        }
      },
      "entity_create_success": {
        "type": "string",
        "example": {
          "result": "success",
          "id": 1
        }
      },
      "entity_create_duplicate": {
        "type": "string",
        "example": {
          "result": "duplicate"
        }
      },
      "entity_create_error": {
        "type": "string",
        "example": {
          "result": "error",
          "inputsToFill": [
            {
              "name": "input1",
              "dataType": "String"
            }
          ]
        }
      },
      "entity_search": {
        "type": "object",
        "properties": {
          "skip": {
            "type": "integer",
            "description": "Пропускается определенное количество первых найденных объектов: будут взяты объекты, следующие за первыми полученными объектами",
            "example": 0
          },
          "top": {
            "type": "integer",
            "description": "Ограничивается максимальное количество получаемых объектов",
            "example": 20
          },
          "sort": {
            "type": "string",
            "description": "Определяются свойства, по которым будет выполняться сортировка полученных объектов. Для каждого свойства обязательно следует указывать направление сортировки — см. ниже ключ direction",
            "example": {
              "id": 1,
              "name": "Навание свойства",
              "path": [
                "Группа свойства",
                "Подгруппа свойства"
              ],
              "direction": "desc"
            }
          },
          "outputproperties": {
            "type": "string",
            "description": "Определяются свойства, значения которых будут запрашиваться по каждому найденному объекту. Если не указано ни одного свойства, то вернется только идентификатор по каждому найденному объекту",
            "example": [
              {
                "id": 150
              },
              {
                "name": "Навание свойства",
                "path": [
                  "Группа свойства",
                  "Подгруппа свойства"
                ]
              }
            ]
          },
          "filter": {
            "type": "string",
            "description": "Указывается фильтр для получения определенных объектов. Структуру полей фильтра см. в разделе Фильтр в методах API",
            "example": "{...}"
          }
        }
      },
      "entity_search_success": {
        "type": "string",
        "example": {
          "totalcount": 200,
          "count": 20,
          "result": [
            {
              "id": 1,
              "properties": [
                {
                  "id": 123,
                  "name": "Название свойства №1",
                  "path": [
                    "Группа",
                    "Подгруппа"
                  ],
                  "value": "Значение 1"
                },
                {
                  "id": 124,
                  "name": "Название свойства №2 типа Ссылка на справочник",
                  "path": [
                    "Группа",
                    "Подгруппа"
                  ],
                  "value": [
                    {
                      "id": 1,
                      "Статус": "Новый",
                      "Цвет": "#FF0000"
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      "entity_search_id_success": {
        "type": "string",
        "example": {
          "type": {
            "id": 55,
            "name": "Название типа объекта",
            "path": [
              "Группа типа объекта",
              "Подгруппа типа объекта"
            ]
          },
          "properties": [
            {
              "id": 123,
              "name": "Название свойства №1",
              "path": [
                "Группа свойства объекта",
                "Подгруппа свойства объекта"
              ],
              "value": "Значение"
            },
            {
              "id": 123,
              "name": "Название свойства №2 типа Ссылка на справочник",
              "path": [
                "Группа свойства объекта",
                "Подгруппа свойства объекта"
              ],
              "value": [
                {
                  "id": 2,
                  "Статус": "В работе",
                  "Цвет": "#00FF00"
                }
              ]
            }
          ]
        }
      },
      "workflows_id_success": {
        "type": "object",
        "description": "Список рабочих процессов объекта",
        "properties": {
          "workflows": {
            "type": "string",
            "description": "Определяются свойства, по которым будет выполняться сортировка полученных объектов. Для каждого свойства обязательно следует указывать направление сортировки — см. ниже ключ direction",
            "example": [
              {
                "id": 1000,
                "name": "Название шаблона рабочего процесса",
                "path": [
                  "Группа шаблона рабочего процесса",
                  "Подгруппа шаблона рабочего процесса"
                ],
                "status": "Finished",
                "state": "Состояние РП 1",
                "instanceId": 3232123
              }
            ]
          }
        }
      },
      "entity_update": {
        "type": "string",
        "example": {
          "id": 793,
          "properties": [
            {
              "id": 9,
              "path": [
                "Свойства объекта"
              ],
              "value": "Текст_1",
              "valueaction": "overwrite",
              "unique": false
            },
            "..."
          ]
        }
      },
      "entity_update_success": {
        "type": "string",
        "example": {
          "result": "success",
          "changed": "true"
        }
      },
      "entity_update_error": {
        "type": "string",
        "example": [
          {
            "error": {
              "code": "SV_SECURITY_NO_PERMISSION",
              "args": [],
              "context": [],
              "stackTrace": null,
              "message": null,
              "inner": null
            },
            "result": "error",
            "changed": false,
            "id": 2323231231237
          },
          {
            "result": "success",
            "changed": false,
            "id": 3197804
          },
          {
            "result": "success",
            "changed": false,
            "id": 3197805
          }
        ]
      },
      "reference_create": {
        "type": "string",
        "example": {
          "reference": {
            "name": "Название справочника",
            "path": [
              "Группа справочника",
              "Подгруппа справочника"
            ],
            "id": 1
          },
          "properties": [
            {
              "name": "Название свойства",
              "value": 2,
              "filter": {
                "type": "Тип свойства",
                "name": "Название свойства",
                "operator": "equal",
                "value": "Значение свойства"
              }
            }
          ]
        }
      },
      "reference_create_success": {
        "type": "string",
        "example": {
          "result": "success",
          "id": 4
        }
      },
      "reference_search": {
        "type": "string",
        "example": {
          "reference": {
            "name": "Название справочника",
            "path": [
              "Группа справочника",
              "Подгруппа справочника"
            ],
            "id": 1
          },
          "skip": 0,
          "top": 3,
          "sort": [
            {
              "name": "Название свойства",
              "id": 100,
              "direction": "desc"
            }
          ],
          "outputproperties": [
            {
              "name": "Название свойства",
              "id": 100
            }
          ],
          "filter": {
            "...": null
          }
        }
      },
      "reference_search_success": {
        "type": "string",
        "example": {
          "totalCount": 10,
          "count": 1,
          "result": [
            {
              "id": 1,
              "properties": [
                {
                  "value": 1,
                  "id": 228,
                  "name": "Название свойства",
                  "path": null
                }
              ]
            }
          ]
        }
      },
      "reference_row": {
        "type": "string",
        "example": {
          "name": "Название справочника",
          "path": [
            "Группа справочника",
            "Подгруппа справочника"
          ],
          "id": 1,
          "rowid": 1
        }
      },
      "reference_row_success": {
        "type": "string",
        "example": {
          "properties": [
            {
              "value": 1,
              "id": 138,
              "name": "Id",
              "path": null
            },
            {
              "value": 18.55496,
              "id": 139,
              "name": "Долгота (X)",
              "path": null
            },
            {
              "value": "Банги",
              "id": 140,
              "name": "Наименование",
              "path": null
            },
            {
              "value": 4.36122,
              "id": 141,
              "name": "Широта (Y)",
              "path": null
            },
            {
              "value": null,
              "id": 199,
              "name": "Новое свойство 1",
              "path": null
            }
          ]
        }
      },
      "reference_update": {
        "type": "string",
        "example": {
          "reference": {
            "name": "Название справочника",
            "path": [
              "Группа справочника",
              "Подгруппа справочника"
            ],
            "id": 1,
            "rowid": 19
          },
          "properties": [
            {
              "name": "Название свойства",
              "value": 2,
              "valueaction": "overwrite",
              "filter": {
                "type": "property",
                "name": "Название свойства",
                "operator": "equal",
                "value": "Значение"
              }
            }
          ]
        }
      },
      "reference_update_success": {
        "type": "string",
        "example": {
          "result": "success"
        }
      },
      "workflow_start": {
        "type": "string",
        "example": {
          "workflows": [
            {
              "path": [
                "Группа",
                "Подгруппа"
              ],
              "name": "Шаблон рабочего процесса №1"
            },
            {
              "path": [
                "Группа",
                "Подгруппа"
              ],
              "name": "Шаблон рабочего процесса №2"
            },
            {
              "path": [
                "Группа",
                "Подгруппа"
              ],
              "name": "Шаблон рабочего процесса №3"
            },
            {
              "path": [
                "Группа",
                "Подгруппа"
              ],
              "name": "Шаблон рабочего процесса №4"
            }
          ],
          "inputs": [
            {
              "name": "Название входного параметра №1",
              "value": "Значение входного параметра №1"
            }
          ]
        }
      },
      "workflow_start_success": {
        "type": "string",
        "example": {
          "result": "success",
          "inputsToFill": null
        }
      },
      "workflow_start_error": {
        "type": "string",
        "example": {
          "result": "error",
          "inputsToFill": [
            {
              "name": "input1",
              "dataType": "String"
            }
          ]
        }
      }
    }
  }
}